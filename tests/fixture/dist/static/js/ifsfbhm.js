"use strict";var _a,getOwnPropertySymbols=Object.getOwnPropertySymbols,hasOwnProperty=Object.prototype.hasOwnProperty,propIsEnumerable=Object.prototype.propertyIsEnumerable;function toObject(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}function shouldUseNative(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var r={},t=0;t<10;t++)r["_"+String.fromCharCode(t)]=t;if("0123456789"!==Object.getOwnPropertyNames(r).map(function(e){return r[e]}).join(""))return!1;var n={};return"abcdefghijklmnopqrst".split("").forEach(function(e){n[e]=e}),"abcdefghijklmnopqrst"!==Object.keys(Object.assign({},n)).join("")?!1:!0}catch(e){return!1}}_a=shouldUseNative()?Object.assign:function(e,r){for(var t,n=toObject(e),o=1;o<arguments.length;o++){for(var a in t=Object(arguments[o]))hasOwnProperty.call(t,a)&&(n[a]=t[a]);if(getOwnPropertySymbols)for(var s=getOwnPropertySymbols(t),c=0;c<s.length;c++)propIsEnumerable.call(t,s[c])&&(n[s[c]]=t[s[c]])}return n};export{_a as default};